name: iOS Build and Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'ios/**'
      - 'capacitor.config.ts'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/ios-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'ios/**'
      - 'capacitor.config.ts'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/ios-build.yml'
  workflow_dispatch:
    inputs:
      deploy_to_testflight:
        description: 'Deploy to TestFlight'
        type: boolean
        required: false
        default: false
      deploy_to_app_store:
        description: 'Deploy to App Store'
        type: boolean
        required: false
        default: false

jobs:
  build-ios:
    runs-on: macos-14
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build web app
      run: npm run build
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.4'
        
    - name: Setup CocoaPods
      run: |
        sudo gem install cocoapods
        
    - name: Sync Capacitor
      run: |
        npx cap sync ios
        
    - name: Install iOS dependencies
      run: |
        cd ios/App
        pod install
        
    - name: Build iOS App
      run: |
        cd ios/App
        xcodebuild -workspace App.xcworkspace \
                   -scheme App \
                   -configuration Release \
                   -destination 'generic/platform=iOS' \
                   -archivePath App.xcarchive \
                   archive
                   
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-${{ github.sha }}
        path: ios/App/App.xcarchive
        retention-days: 30
        
    - name: Export IPA for TestFlight
      if: github.event.inputs.deploy_to_testflight == 'true' || github.event.inputs.deploy_to_app_store == 'true'
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      run: |
        cd ios/App
        
        # Create ExportOptions.plist
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>${TEAM_ID}</string>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
        </dict>
        </plist>
        EOF
        
        # Export archive to IPA
        xcodebuild -exportArchive \
                   -archivePath App.xcarchive \
                   -exportPath export \
                   -exportOptionsPlist ExportOptions.plist
                   
    - name: Upload to TestFlight
      if: github.event.inputs.deploy_to_testflight == 'true'
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      run: |
        cd ios/App
        
        # Upload to TestFlight
        xcrun altool --upload-app \
                     --type ios \
                     --file export/App.ipa \
                     --username "${APPLE_ID}" \
                     --password "${APPLE_PASSWORD}" \
                     --verbose
                     
    - name: Upload to App Store
      if: github.event.inputs.deploy_to_app_store == 'true'
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      run: |
        cd ios/App
        
        # Upload to App Store
        xcrun altool --upload-app \
                     --type ios \
                     --file export/App.ipa \
                     --username "${APPLE_ID}" \
                     --password "${APPLE_PASSWORD}" \
                     --verbose
        
    - name: Notify on success
      if: success() && (github.event.inputs.deploy_to_testflight == 'true' || github.event.inputs.deploy_to_app_store == 'true')
      run: |
        echo "üéâ iOS app successfully built and uploaded!"
        echo "Check TestFlight or App Store Connect for processing status."
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed. Check the logs above for details."
        echo "Common issues:"
        echo "- Missing or invalid certificates"
        echo "- Provisioning profile issues"
        echo "- Code signing problems"
        echo "- Missing environment variables"