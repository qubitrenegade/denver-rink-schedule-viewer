name: PR Checks

on:
  push:                       # run on every branch push
    branches: ['**']          # «**» = any branch pattern
  pull_request:               # run when a PR is opened/updated
    types: [opened, synchronize, reopened, ready_for_review]

# Deduplicate runs
concurrency:
  # Use the PR head ref if it exists, otherwise the branch name.
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true     # newer run replaces any in-flight one

# Ensure tests pass before allowing merge
jobs:
  required-checks:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          **/node_modules
          ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
        restore-keys: |
          ${{ runner.os }}-bun-

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Type check
      run: npx tsc --noEmit --skipLibCheck src/**/*.ts src/**/*.tsx --jsx preserve

    - name: Lint check
      run: bun run lint
      continue-on-error: true

    - name: Run tests (excluding flaky ones)
      id: critical-tests
      run: |
        # Run timezone tests first (most critical)
        bun run test:timezone
        
        # Run other critical tests
        bun run test:critical
        
        echo "✅ Critical tests passed"

    - name: Run coverage report
      run: bun run test --coverage --environment happy-dom
      continue-on-error: true

    - name: Build check
      run: bun run build

    - name: Check for previous step failures
      if: success()
      run: echo "🏒 All checks passed! Ready for merge!"

  # Optional: Add a job that runs all tests but doesn't block merging
  full-test-suite:
    runs-on: ubuntu-latest
    continue-on-error: true # Don't block merge if these fail
    if: github.event.pull_request.draft == false
    needs: required-checks
    
    strategy:
      matrix:
        shard: [frontend, scrapers, utils ] # , api] 
      fail-fast: false
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          **/node_modules
          ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
        restore-keys: |
          ${{ runner.os }}-bun-

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Run tests (${{ matrix.shard }})
      id: full-tests
      run: |
        if [ "${{ matrix.shard }}" == "frontend" ]; then
          echo "🧪 Running frontend tests..."
          # Run components tests one by one to avoid issues
          for test_file in $(find src/components src/hooks -name "*.test.*"); do
            echo "Running $test_file"
            bun test $test_file --environment happy-dom --run || true
          done
        elif [ "${{ matrix.shard }}" == "scrapers" ]; then
          echo "🧪 Running scraper tests..."
          bun test workers/scrapers/ --environment happy-dom --run --no-error-on-unmatched-pattern
        elif [ "${{ matrix.shard }}" == "utils" ]; then
          echo "🧪 Running utility tests..."
          bun test src/utils/ workers/shared/ --environment happy-dom --run --no-error-on-unmatched-pattern
        # elif [ "${{ matrix.shard }}" == "api" ]; then
        #   echo "🧪 Running API tests..."
        #   bun test workers/data-api.test.ts workers/scheduler.test.ts --environment happy-dom --run --no-error-on-unmatched-pattern
        fi
      continue-on-error: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.shard }}
        path: vitest.output.json
        retention-days: 7

    - name: Report test results
      if: always()
      run: |
        if [ "${{ steps.full-tests.outcome }}" == "success" ]; then
          echo "✅ ${{ matrix.shard }} tests completed successfully"
        else
          echo "⚠️ ${{ matrix.shard }} tests completed with some failures (may include known flaky tests)"
        fi
    
    - name: Comment PR with test results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const criticalTestsJob = '${{ needs.required-checks.result || 'unknown' }}';
          const fullTestsStatus = '${{ steps.full-tests.outcome }}';
          
          let statusEmoji = criticalTestsJob === 'success' ? '✅' : '❌';
          let fullTestsEmoji = fullTestsStatus === 'success' ? '✅' : '⚠️';
          
          const comment = `## Test Results

          ### Required Checks: ${statusEmoji}
          Required checks ${criticalTestsJob === 'success' ? 'passed' : 'failed'}. See [workflow run](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}) for details.

          ### Full Test Suite: ${fullTestsEmoji}
          Full test suite completed with ${fullTestsStatus === 'success' ? 'all tests passing' : 'some failures (may include known flaky tests)'}.
          
          _Workflow run on: ${new Date().toISOString()}_`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  # Aggregate test results
  aggregate-results:
    if: github.event.pull_request.draft == false && always()
    needs: [required-checks, full-test-suite]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        pattern: test-results-*
        path: all-test-results
        
    - name: Generate summary report
      run: |
        echo "# Test Results Summary" >> $GITHUB_STEP_SUMMARY
        
        echo "## Required Checks" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.required-checks.result }}" == "success" ]; then
          echo "✅ All required checks passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Some required checks failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "## Full Test Suite" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.full-test-suite.result }}" == "success" ]; then
          echo "✅ All test shards completed successfully" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Some test shards had failures (may include known flaky tests)" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "See the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for full details." >> $GITHUB_STEP_SUMMARY