name: Scrape Big Bear

on:
  schedule:
    # Run at 12:30 AM and 12:30 PM UTC (5:30 PM and 5:30 AM Mountain Time)
    - cron: '30 0,12 * * *'
  workflow_dispatch: # Allow manual triggering
    inputs:
      with_delay:
        description: 'Pause randomly before scraping?'
        required: false
        default: 'false'

# Add permissions to allow the workflow to push changes
permissions:
  contents: write

env:
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
  PUPPETEER_SKIP_DOWNLOAD: true
  PUPPETEER_EXECUTABLE_PATH: "/usr/bin/google-chrome-stable"

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    # only inject a random sleep when this was kicked off by the schedule,
    # so manual runs skip immediately to scraping
    - name: Random delay for schedule runs
      if: |
        github.event_name == 'schedule' ||
        (github.event_name == 'workflow_dispatch' && github.event.inputs.with_delay == 'true')
      run: |
        delay=$((RANDOM % 3600))
        echo "Adding ${delay}s delay for load distribution‚Ä¶"
        sleep $delay

    - name: Scrape Big Bear (with Puppeteer)
      run: bun run scrape:big-bear

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add public/data/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          # add our changes
          git add public/data/

          # Pull latest changes
          git pull --ff-only || {
            echo "Cannot fast-forward, trying rebase approach"
            git pull --rebase
          }
          
          # ensure any pulled changes are staged
          git add public/data/
          
          # Commit and push
          git commit -m "üêª Update Big Bear schedule data $(date -u '+%Y-%m-%d %H:%M UTC')"
          git push
        fi

    - name: Show scraping status
      if: always()
      run: bun run scrape --status

